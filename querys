#!/bin/bash
#################################################################################################
# V A R I A B L E S
#################################################################################################

SQLITE="sqlite3 /home/mhyst/bin/scripts/seriesblanco/sbdb"

#################################################################################################
# Funciones reutilizables
#################################################################################################

function userChoice() {

	local limite=$1
	local cadena="$2"
	local reply
	let reply=0

	echo > /dev/tty
	echo "$cadena" > /dev/tty
	read reply < /dev/tty
	echo > /dev/tty

	#We see if the user entered a number such as we need
	while [[ "$reply" -lt 0 ]] || [[ "$reply" -gt  $limite ]]; do

		#We give advice to the user and exit
		echo "Tiene que introducir un número de entre los indicados:" > /dev/tty
		read reply < /dev/tty
		#echo "Reply es: $reply" > /dev/tty

	done

	echo $reply
}

trim() {
	local FOO="$1"
	FOO_NO_EXTERNAL_SPACE="$(echo -e "${FOO}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
	echo "$FOO_NO_EXTERNAL_SPACE"
}

##################################################################################################
# Funciones base de datos
#-------------------------------------------------------------------------------------------------
# Todas ellas contendrán query en su nombre
##################################################################################################

function querySeries() {
	local search="$1 $2 $3 $4 $5 $6 $7 $8 $9"

	search=$(trim $search)

	local res=`$SQLITE "select * from series where titulo like '%$search%'"`
	echo "$res"
}

function queryTemporadas() {
	local idserie="$1"

	local res=`$SQLITE "select distinct(temporada) from episodios where idserie = $idserie"`

	echo "$res"
}

function queryEpisodios() {
	local idserie="$1"
	local temporada="$2"

	local res=`$SQLITE "select * from episodios where idserie = $idserie and temporada = $temporada"`
	echo "$res"
}

function queryEpisodio() {
	local idserie="$1"
	local temporada="$2"
	local episodio="$3"

	local res=`$SQLITE "select * from episodios where idserie = $idserie and temporada = $temporada and episodio = $episodio"`
	echo "$res"
}

function queryEnlaces() {
	local idserie="$1"
	local idepisodio="$2"

	echo "Entra" > /dev/tty
	local res=`$SQLITE "select * from enlaces where idserie = $idserie and idepisodio = $idepisodio"`
	echo "$res"
	echo "Sale" > /dev/tty
}

function parseSerie () {
	local chain="$1"

	IFS='|' read -r -a array <<< "$chain"
	local serie="${array[1]}"

	echo "$serie"
}

function parseIDSerie () {
	local chain="$1"

	oIFS=$IFS
	IFS='|' read -r -a array <<< "$chain"

	local serie="${array[0]}"
	IFS=$oIFS

	echo "$serie"
}

function parseIDEpisodio () {
	local chain="$1"

	oIFS=$IFS
	IFS='|' read -r -a array <<< "$chain"

	local episodio="${array[0]}"
	IFS=$oIFS

	echo "$episodio"
}

function parseEpisodio () {
	local chain="$1"

	oIFS=$IFS
	IFS='|' read -r -a array <<< "$chain"

	local episodio="${array[3]}"
	IFS=$oIFS

	echo "$episodio"
}

function parseServicio () {
	local chain="$1"

	oIFS=$IFS
	IFS='|' read -r -a array <<< "$chain"

	local episodio="${array[4]::-4}"
	IFS=$oIFS

	echo "$episodio"
}

function parseEnlace () {
	local chain="$1"

	oIFS=$IFS
	IFS='|' read -r -a array <<< "$chain"

	local episodio="${array[3]}"
	IFS=$oIFS

	echo "$episodio"
}

#################################################################################################
# P R O G R A M A      P R I N C I P A L
#################################################################################################

SERIES=$(querySeries "$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9")


echo "Series que coinciden con su cadena de búsqueda: "
echo
#Dividir series por nueva línea
readarray -t aseries <<<"$SERIES"

#Recorrer el array resultante "y"
let i=0
for t in "${aseries[@]}"; do
	nombreserie=$(parseSerie "$t")
	echo "$i: $nombreserie"
	((i++))
done

LIMITE=$(( ${#aseries[*]} - 1 ))
CHOSENID=$(userChoice $LIMITE "Seleccione la serie:")

#echo "El elegido es: ${aseries[$CHOSENID]}"
echo

#Extraer el nombre de la serie para futuros usos
SERIE=$(parseIDSerie "${aseries[$CHOSENID]}")

nombreserie=$(parseSerie "${aseries[$CHOSENID]}")
echo "Ha escogido $nombreserie"

TEMPORADAS=$(queryTemporadas "$SERIE")


echo "Temporadas disponibles:"
echo
readarray -t atemporadas <<<"$TEMPORADAS"

let i=0
for t in "${atemporadas[@]}"; do
	echo "$i: Temporada $t"
	((i++))
done

LIMITE=$(( ${#atemporadas[*]} - 1 ))
CHOSENID=$(userChoice $LIMITE "Seleccione la temporada: ")

TEMPORADA="${atemporadas[$CHOSENID]}"

echo "Ha elegido la temporada $TEMPORADA"

echo

EPISODIOS=$(queryEpisodios "$SERIE" "$TEMPORADA")

echo "Episodios de la temporada $TEMPORADA:"
echo

readarray -t aepisodios <<<"$EPISODIOS"

let i=0
for t in "${aepisodios[@]}"; do
	echo "$i: Episodio $(parseEpisodio $t)"
	((i++))
done

LIMITE=$(( ${#aepisodios[*]} - 1 ))
CHOSENID=$(userChoice $LIMITE "Seleccione el episodio que quiere ver: ")

EPISODIO="${aepisodios[$CHOSENID]}"

IDEPISODIO=$(parseIDEpisodio "$EPISODIO")

echo "Ha escogido el episodio $EPISODIO --> código $IDEPISODIO"

echo


ENLACES=$(queryEnlaces "$SERIE" "$IDEPISODIO")

echo "Enlaces del episodio $EPISODIO de la temporada $TEMPORADA: "
echo

readarray -t aenlaces <<<"$ENLACES"

let i=0
for t in "${aenlaces[@]}"; do
	echo "$i: $(parseServicio $t)"
	((i++))
done

LIMITE=$(( ${#aenlaces[*]} - 1 ))
CHOSENID=$(userChoice $LIMITE "Seleccione el enlace: ")

ENLACE=$(parseEnlace "${aenlaces[$CHOSENID]}")

echo "Este es el enlace que ha seleccionado:"
echo
echo "$ENLACE"
echo
echo "Que disfrute del episodio!"